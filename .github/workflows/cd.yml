---
name: CD

"on":
  push:
    tags:
      - "[0-9].[0-9].[0-9]+"

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: checkout project
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
      - name: check cargo cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        id: rust-cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-musl-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: install rust toolchain
        if: steps.rust-cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@fc3253060d0c959bea12a59f10f8391454a0b02d
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl
      - name: cargo release
        run: |
          cargo build --locked --release --target x86_64-unknown-linux-gnu --target x86_64-unknown-linux-musl
      - name: assemble artifacts
        run: .github/workflows/cd.sh assemble
      - name: install cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65
      - name: cosign artifacts
        run: .github/workflows/cd.sh cosign
      - name: release artifacts
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            rustracer-*.tar.gz
            rustracer-*.txt
            rustracer-*.pem
            rustracer-*.sig
  cratesio:
    name: cratesio
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - release
    environment:
      name: cratesio
      url: https://crates.io/crates/rustracer
    steps:
      - name: checkout project
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
      - name: check cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-all-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: install rust toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@fc3253060d0c959bea12a59f10f8391454a0b02d
        with:
          toolchain: stable
          components: clippy, llvm-tools-preview, rustfmt, rust-docs
      - name: cargo publish
        run: |
          cargo publish --locked
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  ghpages:
    name: ghpages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - cratesio
    steps:
      - name: checkout project
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
      - name: check cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-all-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: install rust toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@fc3253060d0c959bea12a59f10f8391454a0b02d
        with:
          toolchain: stable
          components: clippy, llvm-tools-preview, rustfmt, rust-docs
      - name: patch and cargo rustdoc
        run: make rust_docs
      - name: publish to gh-pages
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/doc/
