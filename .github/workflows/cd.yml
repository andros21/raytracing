---
name: CD

"on":
  push:
    tags:
      - "[0-9].[0-9].[0-9]+"

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: checkout project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: check cargo cache
        uses: actions/cache@a7c34adf76222e77931dedbf4a45b2e4648ced19
        id: rust-cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-musl-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: install rust toolchain
        if: steps.rust-cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@56751392ac172fc3a68fef1413f507767ed5f563
        with:
          toolchain: stable
          default: true
          profile: minimal
          target: x86_64-unknown-linux-musl
      - name: cargo release gnu
        uses: actions-rs/cargo@b0651d9f4d4983fd4cc8e94d927bdc0bb5566667
        with:
          command: build
          args: --locked --release
      - name: cargo release musl
        uses: actions-rs/cargo@b0651d9f4d4983fd4cc8e94d927bdc0bb5566667
        with:
          command: build
          args: --locked --release --target x86_64-unknown-linux-musl
      - name: assemble artifacts
        run: .github/workflows/cd.sh assemble
      - name: check cosign version
        id: cosign-version
        run: |
          LATEST=$(curl -sL https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r ".tag_name")
          echo "cosign version: ${LATEST}"
          echo "##[set-output name=latest;]${LATEST}"
      - name: check cosign cache
        uses: actions/cache@a7c34adf76222e77931dedbf4a45b2e4648ced19
        id: cosign-cache
        with:
          path: ~/.cosign
          key: ${{ runner.os }}-cosign-${{ steps.cosign-version.outputs.latest }}
      - name: add cosign to path
        if: steps.cosign-cache.outputs.cache-hit == 'true'
        run: |
          echo "HOME=$HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/.cosign" >> $GITHUB_ENV
      - name: install cosign
        if: steps.cosign-cache.outputs.cache-hit != 'true'
        uses: sigstore/cosign-installer@b3413d484cc23cf8778c3d2aa361568d4eb54679
        with:
          cosign-release: ${{ steps.cosign-version.outputs.latest }}
      - name: cosign artifacts
        env:
          COSIGN_EXPERIMENTAL: 1
        run: .github/workflows/cd.sh cosign
      - name: release artifacts
        uses: softprops/action-gh-release@6232f0b438cb856c39d14f8743e3a7c99fc879af
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            rustracer-*.tar.gz
            rustracer-*.txt
            rustracer-*.pem
            rustracer-*.sig
  cratesio:
    name: cratesio
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - release
    environment:
      name: cratesio
      url: https://crates.io/crates/rustracer
    steps:
      - name: checkout project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: check cache
        uses: actions/cache@a7c34adf76222e77931dedbf4a45b2e4648ced19
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-all-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: install rust toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@568dc894a7f9e32ffd9bb7d7a6cebb784cdaa2b0
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, llvm-tools-preview, rustfmt, rust-docs
      - name: cargo publish
        uses: actions-rs/cargo@b0651d9f4d4983fd4cc8e94d927bdc0bb5566667
        with:
          command: publish
          args: --locked
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  ghpages:
    name: ghpages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - cratesio
    steps:
      - name: checkout project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: check cache
        uses: actions/cache@a7c34adf76222e77931dedbf4a45b2e4648ced19
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-rust-all-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: install rust toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@568dc894a7f9e32ffd9bb7d7a6cebb784cdaa2b0
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, llvm-tools-preview, rustfmt, rust-docs
      - name: patch and cargo rustdoc
        run: make rust_docs
      - name: publish to gh-pages
        uses: peaceiris/actions-gh-pages@b24891da2a683970a75ebe54633f084809cc25c0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/doc/
