---
name: CD

"on":
  push:
    tags:
      - "[0-9].[0-9].[0-9]+"

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: check cargo cache
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c
        id: rust-cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: add musl target
        run: |
          rustup target add x86_64-unknown-linux-musl
      - name: cargo release
        run: |
          cargo build --locked --release --target x86_64-unknown-linux-gnu --target x86_64-unknown-linux-musl
      - name: assemble artifacts
        run: .github/workflows/cd.sh assemble
      - name: generate subject
        id: hash
        run: |
          set -euo pipefail
          echo "hashes=$(cat rustracer-*.txt | base64 -w0)" >> "$GITHUB_OUTPUT"
      - name: upload artifacts
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392
        with:
          name: rustracer-build
          path: |
            rustracer-*.tar.gz
            rustracer-*.txt
          if-no-files-found: error
          retention-days: 1
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
      contents: write
    needs: build
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110
        with:
          name: rustracer-build
      - name: install cosign
        uses: sigstore/cosign-installer@9614fae9e5c5eddabb09f90a270fcb487c9f7149
      - name: cosign artifacts
        run: .github/workflows/cd.sh cosign
      - name: generate changelog latest
        uses: orhun/git-cliff-action@b7913b664658dd091d9971658cb02a19047baa79
        id: cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
      - name: get tag
        shell: bash
        run: |
          echo "TAG=${GITHUB_REF:10}" >> "$GITHUB_ENV"
      - name: release artifacts
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          name: rustracer ${{ env.TAG }}
          body: ${{ steps.cliff.outputs.content }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            rustracer-*.tar.gz
            rustracer-*.txt
            rustracer-*.pem
            rustracer-*.sig
  provenance:
    needs:
      - build
      - release
    permissions:
      actions: read
      id-token: write
      contents: write
    # slsa-framework/slsa-github-generator doesn't support pinning version
    # > Invalid ref: 07e64b653f10a80b6510f4568f685f8b7b9ea830. Expected ref of the form refs/tags/vX.Y.Z
    # https://github.com/slsa-framework/slsa-github-generator/issues/722
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true
  cratesio:
    name: cratesio
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - release
    environment:
      name: cratesio
      url: https://crates.io/crates/rustracer
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: check cache
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: cargo publish
        run: |
          cargo publish --locked
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  ghpages:
    name: ghpages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - cratesio
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: check cache
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c
        id: cache
        with:
          path: |
            ~/.cargo/
            ~/.rustup/
            target/
          key: ${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
      - name: patch and cargo rustdoc
        run: make rust_docs
      - name: publish to gh-pages
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/doc/
  changelog:
    name: changelog
    needs:
      - ghpages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout project
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0
      - name: get tag
        shell: bash
        run: |
          echo "TAG=${GITHUB_REF:10}" >> "$GITHUB_ENV"
      - name: Refresh changelog
        uses: orhun/git-cliff-action@b7913b664658dd091d9971658cb02a19047baa79
        with:
          config: cliff.toml
          args: --verbose --tag ${{ env.TAG }}
        env:
          OUTPUT: CHANGELOG.md
      - name: commit changelog
        uses: EndBug/add-and-commit@1bad3abcf0d6ec49a5857d124b0bfb52dc7bb081
        with:
          message: "chore(CHANGELOG): add rustracer ${{ env.TAG }} changes"
          add: 'CHANGELOG.md'
          new_branch: master
